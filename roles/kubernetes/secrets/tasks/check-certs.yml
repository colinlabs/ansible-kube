---
- name: "Check_certs | check if the certs have already been generated on first master"
  find:
    paths: "{{ kube_cert_dir }}"
    patterns: "*.pem"
    get_checksum: true
  delegate_to: "{{groups['kube-master'][0]}}"
  register: kubecert_master
  run_once: true

- name: "Check_certs | Set default value for 'sync_certs', 'gen_certs', and 'secret_changed'  to false"
  set_fact:
    sync_certs: false
    gen_certs: false
    secret_changed: false

- name: "Check certs | check if a cert already exists on node"
  stat:
    path: "{{ kube_cert_dir }}/{{ item }}"
  register: kubecert_node
  with_items:
    - ca.pem
    - admin.pem
    - apiserver.pem
    - apiserver-key.pem
    - kube-scheduler.pem
    - kube-scheduler-key.pem
    - kube-controller-manager.pem
    - kube-controller-manager-key.pem
    - front-proxy-ca.pem
    - front-proxy-ca-key.pem
    - front-proxy-client.pem
    - front-proxy-client-key.pem
    - kube-proxy.pem
    - kube-proxy-key.pem

- name: "Check_certs | Set 'gen_certs' to true"
  set_fact:
    gen_certs: true
  when: "not item in kubecert_master.files|map(attribute='path') | list"
  run_once: true
  with_items: >-
       ['{{ kube_cert_dir }}/ca.pem',
       '{{ kube_cert_dir }}/admin.pem',
       '{{ kube_cert_dir }}/apiserver.pem',
       '{{ kube_cert_dir }}/apiserver-key.pem',
       '{{ kube_cert_dir }}/kube-scheduler.pem',
       '{{ kube_cert_dir }}/kube-scheduler-key.pem',
       '{{ kube_cert_dir }}/kube-controller-manager.pem',
       '{{ kube_cert_dir }}/kube-controller-manager-key.pem',
       '{{ kube_cert_dir }}/front-proxy-ca.pem',
       '{{ kube_cert_dir }}/front-proxy-ca-key.pem',
       '{{ kube_cert_dir }}/front-proxy-client.pem',
       '{{ kube_cert_dir }}/front-proxy-client-key.pem',
       '{{ kube_cert_dir }}/kube-proxy.pem',
       '{{ kube_cert_dir }}/kube-proxy-key.pem',
       '{{ kube_cert_dir }}/service-account-key.pem',
       '{{ kube_cert_dir }}/kubelet.pem',
       '{{ kube_cert_dir }}/kubelet-key.pem']

- name: "Check certs | write openssl config"
  template:
    src: "openssl.conf.j2"
    dest: "{{ kube_cert_dir }}/openssl-kube.conf"
  register: openssl_kube
  run_once: yes
  delegate_to: "{{groups['kube-master'][0]}}"

- name: "Check_certs | Set 'gen_certs' to true"
  set_fact:
    gen_certs: true
  when: openssl_kube.changed
  run_once: true

- name: "Check_certs | Set 'sync_certs' to true"
  set_fact:
    sync_certs: true
  when: |-
      {%- set certs = {'sync': False} -%}
      {% if (not kubecert_node.results[0].stat.exists|default(False)) or
            (not kubecert_node.results[13].stat.exists|default(False)) or
            (kubecert_node.results[13].stat.checksum|default('') != kubecert_master.files|selectattr("path", "equalto", kubecert_node.results[13].stat.path)|map(attribute="checksum")|first|default('')) -%}
              {%- set _ = certs.update({'sync': True}) -%}
      {% endif %}
      {{ certs.sync }}
